<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

   <import resource="classpath:org/smallmind/persistence/hibernate.xml"/>

   <!-- Liquibase updates -->
   <bean class="org.smallmind.persistence.liquibase.SpringLiquibase">
      <property name="dataSource" ref="schemaPooledDataSource"/>
      <property name="changeLog" value="classpath:database/schema/schema.xml"/>
      <property name="preview" value="false"/>
      <property name="execute" value="${liquibase.execute}"/>
   </bean>

   <!-- Connection Pooling -->
   <bean id="schemaConnectionInstanceFactory" class="org.smallmind.persistence.orm.sql.pool.DriverManagerConnectionInstanceFactory">
      <constructor-arg index="0" value="${jdbc.driver}"/>
      <constructor-arg index="1" value="${jdbc.url.schema}"/>
      <constructor-arg index="2" value="${jdbc.username}"/>
      <constructor-arg index="3" value="${jdbc.password}"/>
      <property name="validationQuery" value="${jdbc.pool.connect.query}"/>
   </bean>

   <bean id="schemaDBPool" class="org.smallmind.quorum.pool.ConnectionPool" init-method="startup" destroy-method="shutdown">
      <constructor-arg index="0" value="dbPool"/>
      <constructor-arg index="1" ref="schemaConnectionInstanceFactory"/>
      <property name="testOnAcquire" value="${jdbc.pool.connect.test}"/>
      <property name="minPoolSize" value="${jdbc.pool.size.min}"/>
      <property name="allowSoftMinSize" value="true"/>
      <property name="maxPoolSize" value="${jdbc.pool.size.max}"/>
      <property name="acquireWaitTimeMillis" value="1000"/>
      <property name="maxLeaseTimeSeconds" value="1800"/>
      <property name="connectionTimeoutMillis" value="500"/>
   </bean>

   <bean id="schemaPooledDataSource" class="org.smallmind.persistence.orm.sql.pool.PooledDataSource">
      <constructor-arg index="0" value="schema"/>
      <constructor-arg index="1" ref="schemaDBPool"/>
   </bean>

   <!-- Session and Transaction -->
   <bean id="schemaSessionFactory" class="org.smallmind.persistence.orm.spring.hibernate.AnnotationAwareLocalSessionFactoryBean">
      <property name="dataSourceKey" value="schema"/>
      <property name="dataSource" ref="schemaPooledDataSource"/>
      <property name="mappingLocations">
         <bean class="org.smallmind.persistence.orm.spring.hibernate.HibernateFileSeekingFactoryBean">
            <property name="dataSourceKey" value="schema"/>
         </bean>
      </property>
      <property name="hibernateProperties">
         <value>
            hibernate.dialect=${hibernate.dialect}
            hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
            hibernate.bytecode.use_reflection_optimizer=true
            hibernate.id.new_generator_mappings=true
            hibernate.connection.isolation=${hibernate.connection.isolation}
            hibernate.connection.autocommit=${hibernate.connection.autocommit}
            hibernate.jdbc.use_scrollable_resultset=true
            hibernate.jdbc.use_streams_for_binary=false
            hibernate.jdbc.batch_size=${hibernate.jdbc.batch_size}
            hibernate.query.substitutions=true 1, false 0
            hibernate.show_sql=${hibernate.show_sql}
            hibernate.format_sql=${hibernate.format_sql}
            hibernate.use_sql_comments=false
            hibernate.generate_statistics=false
            hibernate.cache.use_second_level_cache=${hibernate.cache.secondlevel.use}
            hibernate.cache.use_query_cache=false
            hibernate.cache.use_minimal_puts=true
            hibernate.cache.provider_class=org.terracotta.hibernate.TerracottaHibernateCacheProvider
            hibernate.search.default.directory_provider=org.hibernate.search.store.FSDirectoryProvider
            hibernate.search.default.indexBase=${lucene.dir}
            hibernate.search.default.batch.merge_factor=10
            hibernate.search.default.batch.max_buffered_docs=100
         </value>
      </property>
   </bean>

   <!--Proxy Session-->
   <bean id="schemaProxySession" class="org.smallmind.persistence.orm.hibernate.HibernateProxySession" init-method="register">
      <constructor-arg index="0" value="schema"/>
      <constructor-arg index="1" ref="schemaSessionFactory"/>
      <constructor-arg index="2" value="true"/>
      <constructor-arg index="3" value="${orm.cascade}"/>
   </bean>

</beans>