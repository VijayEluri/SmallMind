<?xml version="1.0" encoding="UTF-8" ?>
<!--
  All content copyright (c) 2003-2008 Terracotta, Inc.,
  except as may otherwise be noted in a separate copyright notice.
  All rights reserved.
-->
<xml-fragment>
   <instrumented-classes>
      <include>
         <class-expression>org.smallmind.quorum.cache.Cache</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.Cache$KeyCondition</class-expression>
         <honor-transient>true</honor-transient>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.OrderedCache</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.ExpirationTimer</class-expression>
         <honor-transient>true</honor-transient>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.TimestampedCacheSource</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.hibernate.HibernateTimestampedCacheSource</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.SizeLimitedCacheAccumulator</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.TimeToLiveCacheExpirationPolicy</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.AbstractTimestampOrderedCacheEntry</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.TimestampOrderedCacheEntry</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.TimestampedCacheMetaData</class-expression>
      </include>
      <include>
         <class-expression>org.smallmind.quorum.cache.TimestampedCacheMetaDataComparator</class-expression>
      </include>
   </instrumented-classes>

   <roots>
      <root>
         <field-name>org.smallmind.quorum.cache.Cache.cacheReferenceMap</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.Cache.keyConditionMap</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.Cache.stripeLocks</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.Cache.initialized</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.OrderedCache.cacheKeyMap</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.OrderedCache.cacheAccumulator</field-name>
      </root>
      <root>
         <field-name>org.smallmind.quorum.cache.ExpirationTimer.processing</field-name>
      </root>
   </roots>

   <locks>
      <autolock>
         <method-expression>* org.smallmind.quorum.cache.Cache.__INIT__(..)</method-expression>
         <lock-level>write</lock-level>
      </autolock>
   </locks>
</xml-fragment>
